{"version":3,"sources":["components/header/header.js","components/header/index.js","services/gotService.js","components/spinner/index.js","components/spinner/spinner.js","components/errorMessage/index.js","components/errorMessage/errorMessage.js","components/randomChar/randomChar.js","components/randomChar/index.js","components/itemList/index.js","components/itemList/itemList.js","components/charDetails/index.js","components/charDetails/charDetails.js","components/app/index.js","components/app/app.js","index.js"],"names":["HeaderBlock","styled","div","_templateObject","HeaderTitle","h3","_templateObject2","HeaderLinks","ul","_templateObject3","Header","react_default","a","createElement","href","GotService","_this","this","Object","classCallCheck","getResource","_ref","asyncToGenerator","regenerator_default","mark","_callee","url","res","wrap","_context","prev","next","fetch","concat","_apiBase","sent","ok","Error","status","json","abrupt","stop","_x","apply","arguments","id","map","item","_this2","_transformCaracters","char","name","gender","born","died","culture","house","region","words","titles","overlord","ancestraWeapons","book","numberOfPages","publiser","released","Spinner","className","ErrorMessage","RandomChar","gotService","gotServise","state","loading","error","onCharLoaded","setState","updateChar","Math","floor","random","getCharacter","then","catch","onError","timerId","setInterval","clearInterval","_this$state","errorMessage","components_errorMessage","spinner","components_spinner","content","randomChar_View","Component","View","Fragment","ItemList","charList","getAllCharacters","err","console","log","arr","_this3","i","key","onClick","props","onCharSelected","items","renderItems","CharDetails","undefined","charId","_this$state$char","App","randomChar","selectedChar","checkToggle","randomCharVisibility","components_randomChar","Container","components_header","Row","Col","lg","size","offset","Button","color","md","components_itemList","components_charDetails","ReactDOM","render","app","document","getElementById"],"mappings":"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","file":"static/js/main.b1148fee.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst HeaderBlock = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: 80px;\n`;\n\nconst HeaderTitle = styled.h3`\n    font-size: 24px;\n    color: #fff;\n    margin: 0;\n`;\n\nconst HeaderLinks = styled.ul`\n    display: flex;\n    margin: 0;\n    align-items: center;\n    color: #fff;\n    list-style-type: none;\n    li {\n        margin-right: 20px;\n        font-size: 18px;\n    }\n`;\n\nconst Header = () => {\n    return (\n        <HeaderBlock>\n            <HeaderTitle>\n                <a href=\"#\">\n                Game of Thrones DB\n                </a>\n            </HeaderTitle>\n            <HeaderLinks>\n                <li>\n                    <a href=\"#\">Characters</a>\n                </li>\n                <li>\n                    <a href=\"#\">Houses</a>\n                </li>\n                <li>\n                    <a href=\"#\">Books</a>   \n                </li>\n            </HeaderLinks>\n        </HeaderBlock>\n    );\n};\n\nexport default Header;","import Header from './header';\n\nexport default Header;","export default class GotService {\r\n    constructor() {\r\n        this._apiBase = 'https://www.anapioficeandfire.com/api';\r\n    }\r\n\r\n    getResource = async (url) => {\r\n        const res = await fetch(`${this._apiBase}${url}`);\r\n    \r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}` +\r\n            `, received ${res.status}`);\r\n        }\r\n        return await res.json();\r\n    }\r\n\r\n    getAllBooks() {\r\n        return this.getResource(`/books/`);\r\n    }\r\n    \r\n    getBook(id) {\r\n        return this.getResource(`/books/${id}/`);\r\n    }\r\n    \r\n    async getAllCharacters() {\r\n        const res =  await this.getResource(`/characters?page=5&pageSize=10`);\r\n        return res.map(item => this._transformCaracters(item))\r\n    }\r\n\r\n    async getCharacter (id) {\r\n        const res = await this.getResource(`/characters/${id}`);\r\n        return this._transformCaracters(res);\r\n    }\r\n    \r\n    getAllHouses() {\r\n        return this.getResource(`/houses/`);\r\n    }\r\n    \r\n    getHouse(id) {\r\n        return this.getResource(`/houses/${id}/`);\r\n    }\r\n    \r\n    _transformCaracters (char) {\r\n        return {\r\n            name: char.name,\r\n            gender: char.gender,\r\n            born: char.born,\r\n            died: char.died,\r\n            culture: char.culture\r\n        }\r\n    }\r\n\r\n    _transformHouse(house) {\r\n        return {\r\n            name: house.name,\r\n            region: house.region,\r\n            words: house.words,\r\n            titles: house.titles,\r\n            overlord: house.overlord,\r\n            ancestraWeapons: house.ancestraWeapons\r\n        }\r\n    }\r\n\r\n    _transformBook(book) {\r\n        return {\r\n            name: book.name,\r\n            numberOfPages: book.numberOfPages,\r\n            publiser: book.publiser,\r\n            released: book.released\r\n        }\r\n    }\r\n}\r\n","import Spinner from './spinner';\r\nexport default Spinner;","import React from 'react';\r\nimport './spinner.css'\r\n\r\nconst Spinner = () => \r\n<div className=\"loadingio-spinner-spin-w220yqsosks\"><div className=\"ldio-sqpe1bsg6z\">\r\n<div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div>\r\n</div></div>;\r\n\r\nexport default Spinner;\r\n","import ErrorMessage from './errorMessage';\r\nexport default ErrorMessage;","import React from 'react';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <span>Something go wrong</span>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import React, {Component} from 'react';\nimport './randomChar.css';\nimport gotServise from '../../services/gotService';\nimport Spinner from '../spinner';\nimport ErrorMessage from '../errorMessage';\n\nexport default class RandomChar extends Component {\n    gotService = new gotServise();\n\n\n    state = {\n        char: {},\n        loading: true,\n        error: false\n    }\n\n    componentDidMount() {\n        this.updateChar();\n        this.timerId = setInterval(this.updateChar, 3000);\n    }\n\n    componentWillMount() {\n        clearInterval(this.timerId)\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({char, loading: false})\n    }\n\n    updateChar = () => {\n        const id = Math.floor(Math.random()*115 +25);\n        this.gotService.getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n\n    onError = () => {\n        this.setState({error: true, loading: false})\n    }\n\n    render() {\n        const {char, loading, error} = this.state;\n\n        const errorMessage = error ? <ErrorMessage/> : null; \n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? <View char={char}/> : null;\n\n        return (\n            <div className='random-block rounded'>\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        );\n    }\n}\n\n\nconst View = ({char}) => {\n    const {name, gender, born, died, culture} = char;\n\n    return (\n        <React.Fragment>\n            <h4>Random Character: {name}</h4>\n            <ul className=\"list-group list-group-flush\">\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <span className=\"term\">Gender </span>\n                    <span>{gender}</span>\n                </li>\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <span className=\"term\">Born </span>\n                    <span>{born}</span>\n                </li>\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <span className=\"term\">Died </span>\n                    <span>{died}</span>\n                </li>\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <span className=\"term\">Culture </span>\n                    <span>{culture}</span>\n                </li>\n            </ul>\n        </React.Fragment>\n    )\n}","import RandomChar from './randomChar';\n\nexport default RandomChar;","import ItemList from './itemList';\n\nexport default ItemList;","import React, {Component} from 'react';\nimport './itemList.css';\nimport gotServise from '../../services/gotService';\nimport Spinner from '../spinner';\n\n\nexport default class ItemList extends Component {\n    gotService = new gotServise();\n\n    state = {\n        charList: null\n    }\n\n\n    componentWillMount() {\n        this.gotService.getAllCharacters()\n            .then(charList => this.setState({charList}))\n            .catch(err => console.log(err));\n    }\n\n    renderItems(arr) {\n        return arr.map((item, i) => {\n            return (\n                <li key={i} className=\"list-group-item\" onClick={() => this.props.onCharSelected(i)}>\n                    {item.name}\n                </li>\n            )\n        })\n    }\n\n    render() {\n        const {charList} = this.state;\n\n\n        if (!charList) {\n            return <Spinner/>\n        }\n\n        const items= this.renderItems(charList);\n\n        return (\n            <ul className=\"item-list list-group\">\n                {items}\n            </ul>\n        );\n    }\n}","import CharDetails from './charDetails';\nexport default CharDetails;","import React, {Component} from 'react';\nimport './charDetails.css';\nimport gotServise from '../../services/gotService';\n\n\nexport default class CharDetails extends Component {\n    gotService = new gotServise();\n\n    state ={\n        char: undefined\n    }\n\n    updateChar = ()=> {\n        const {charId} = this.props;\n        if (!charId) {\n            return;\n        }\n        this.gotService.getCharacter(charId)\n            .then(char => this.setState({char}))\n            .catch(err => console.log(err))\n    }\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    componentDidUpdate() {\n\n    }\n\n    render() {\n\n        if (!this.state.char){\n            console.log('here');\n            return <span className='select-error'>Please select a character</span>\n        }\n\n        const {name, gender, born, died, culture} = this.state.char;\n\n        return (\n            <div className=\"char-details rounded\">\n                <h4>{name}</h4>\n                <ul className=\"list-group list-group-flush\">\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Gender</span>\n                        <span>{gender}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Born</span>\n                        <span>{born}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Died</span>\n                        <span>{died}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Culture</span>\n                        <span>{culture}</span>\n                    </li>\n                </ul>\n            </div>\n        );\n    }\n}","import App from './app';\n\nexport default App;\n","import React, {Component} from 'react';\nimport {Col, Row, Container, Button} from 'reactstrap';\nimport Header from '../header';\nimport RandomChar from '../randomChar';\nimport ItemList from '../itemList';\nimport CharDetails from '../charDetails';\n\n\nexport default class App extends Component {\n\n    state = {\n        randomChar: true,\n        selectedChar: 130\n    }\n\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n    }\n\n    checkToggle = () => {\n        if (this.state.randomChar) {\n            this.setState({randomChar: false})\n        } else {\n            this.setState({randomChar: true})\n        }\n    }\n\n    render() {\n\n        const randomCharVisibility = this.state.randomChar ? <RandomChar/> : null;\n\n        return (\n            <> \n                <Container>\n                    <Header />\n                </Container>\n                <Container>\n                    <Row>\n                        <Col lg={{size: 5, offset: 0}}>\n                            {randomCharVisibility}\n                        </Col>\n                    </Row>\n                    <Button color=\"primary\" onClick={()=> this.checkToggle()}>Toggle</Button>\n                    <Row>\n                        <Col md='6'>\n                            <ItemList onCharSelected={this.onCharSelected}/>\n                        </Col>\n                        <Col md='6'>\n                            <CharDetails charId={this.state.selectedChar}/>\n                        </Col>\n                    </Row>\n                </Container>\n            </>\n        );\n    }\n\n};\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}